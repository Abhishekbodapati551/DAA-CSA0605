# Constants
INF = float('inf')
def floyd_warshall(times, n, k):
    dist = [[INF] * n for _ in range(n)]
    
    for i in range(n):
        dist[i][i] = 0  
    for u, v, w in times:
        dist[u - 1][v - 1] = w 
    for via in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][via] + dist[via][j]:
                    dist[i][j] = dist[i][via] + dist[via][j]
    max_dist = max(dist[k - 1])
    return max_dist if max_dist != INF else -1
times = [[2, 1, 1], [2, 3, 1], [3, 4, 1]]
n = 4
k = 2
result = floyd_warshall(times, n, k)
print(result)  
